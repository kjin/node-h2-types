#!/usr/bin/env node
const [ _bin, _script, flag ] = process.argv

const { readFileSync, writeFileSync } = require('fs')
const { execSync } = require('child_process')

const http2Dts = readFileSync('index.d.ts.template', 'utf8')
  .split('\n')
  .map(line => {
    const matches = line.match(/(\s+)\/\/\s\$\s(.*)/)
    if (!matches) {
      return [line]
    }
    const [_0, prefix, command] = matches
    const execResult = execSync(command, {
      encoding: 'utf8'
    })
    return execResult.trim().split('\n').map(l => `${prefix}${l}`)
  })
  .reduce((acc, lines) => acc.concat(lines), [])
  .map(line => {
    const matches = line.match(/^(\s+)[^\s]/)
    if (!matches) {
      return line
    }
    const [_0, indent] = matches
    return indent + line
  })
  .filter(line => !line.match(/\s+\/\/\/\//))
  .map(line => line.replace(/\s+$/, ''))
  .join('\n')

const defTypedRemotePrefix = 'https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master'
const suffix = 'types/node/index.d.ts'

if (flag === '-e') {
  const nodeDts = process.env.DEFINITELY_TYPED ?
    execSync(`git show master:${suffix}`, { cwd: process.env.DEFINITELY_TYPED }) :
    execSync(`curl ${defTypedRemotePrefix}/${suffix}`)
  writeFileSync('index.d.ts', [nodeDts, http2Dts].join('\n'), 'utf8')
} else {
  writeFileSync('index.d.ts', http2Dts, 'utf8')
}
